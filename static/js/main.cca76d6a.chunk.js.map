{"version":3,"sources":["material_title_panel.js","sidebar_content.js","SearchBox.js","ClueCard.js","CardList.js","App.js","serviceWorker.js","index.js"],"names":["styles","root","fontFamily","fontWeight","header","backgroundColor","color","padding","fontSize","MaterialTitlePanel","props","rootStyle","style","title","children","sidebar","width","height","sidebarLink","display","textDecoration","divider","margin","content","position","SidebarContent","timeout","state","categories","difficulty","favorites","categorySelected","difficultyOptions","i","push","label","toString","value","onDifficultyChange","bind","onCategoryChange","onLoadAllPress","onFavoritesChange","this","setState","categoryChangeListener","difficultySearchListener","favoritesListener","event","fetchAllCards","queryChanged","options","filterOptions","createFilterOptions","favoritesOptions","diffFilterOptions","favoritesFilterOptions","links","key","className","autosize","name","onChange","searchable","clearable","difficultyChangeListener","type","id","startDateListener","endDateListener","onClick","onLoadAllQueryPress","Component","SearchBox","searchfield","searchChange","text","placeholder","factor","marginFactor","viewportWidth","document","documentElement","clientWidth","Math","trunc","cardWidth","onCardClick","listener","ClueCard","favorited","flipOnHover","flipOnClick","flipDirection","textAlign","src","alt","maxWidth","maxHeight","marginTop","category","clue","alignItems","justifyContent","answer","CardList","cards","map","card","isFavorited","has","airDate","contentHeaderMenuLink","mql","window","matchMedia","App","onSearchChange","persist","clearTimeout","setTimeout","target","categoryindex","parseInt","onDifficultySearchChange","difficultyfield","onStartDateChange","dateStart","onEndDateChange","dateEnd","onFavoritesDDChange","mode","favoritesMode","addToFavorites","favs","delete","add","allCards","filteredCards","allCategories","docked","matches","Set","open","activePage","itemsPerPage","useFiltered","diffFilteredCards","fetchCategories","fetchCards","fetchInitialCards","fetchAllQueriedCards","mediaQueryChanged","toggleOpen","onSetOpen","currOffset","axios","get","then","response","data","length","offset","undefined","removedTags","replace","question","airdate","currCards","concat","query","params","loadAll","s","Date","substring","min_date","e","max_date","Object","keys","addListener","removeListener","ev","preventDefault","selected","pages","sidebarContentProps","contentHeader","href","sidebarProps","indexOfLast","indexOfFirst","listOfCards","cardRef","filter","item","toLowerCase","includes","cardsToRender","slice","max","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPageDisplayed","pageRangeDisplayed","onPageChange","changePage","containerClassName","subContainerClassName","activeClassName","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cca76d6a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily:\r\n      '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\r\n    fontWeight: 300\r\n  },\r\n  header: {\r\n    backgroundColor: \"#0053a0\",\r\n    color: \"white\",\r\n    padding: \"5px\",\r\n    fontSize: \"1.5em\"\r\n  }\r\n};\r\n\r\nconst MaterialTitlePanel = props => {\r\n  const rootStyle = props.style\r\n    ? { ...styles.root, ...props.style }\r\n    : styles.root;\r\n\r\n  return (\r\n    <div style={rootStyle}>\r\n      <div style={styles.header}>{props.title}</div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nMaterialTitlePanel.propTypes = {\r\n  style: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  children: PropTypes.object\r\n};\r\n\r\nexport default MaterialTitlePanel;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select from 'react-virtualized-select';\r\nimport createFilterOptions from 'react-select-fast-filter-options';\r\nimport MaterialTitlePanel from \"./material_title_panel\";\r\nimport 'react-select/dist/react-select.css';\r\nimport 'react-virtualized/styles.css'\r\nimport 'react-virtualized-select/styles.css';\r\nimport './sidebar_content.css';\r\n\r\nconst styles = {\r\n  sidebar: {\r\n    width: 350,\r\n    height: \"100%\"\r\n  },\r\n  sidebarLink: {\r\n    display: \"block\",\r\n    padding: \"16px 0px\",\r\n    color: \"#757575\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"1.5rem\"\r\n  },\r\n  divider: {\r\n    margin: \"8px 0\",\r\n    height: 1,\r\n    backgroundColor: \"#757575\"\r\n  },\r\n  content: {\r\n    padding: \"16px\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    position: \"absolute\"\r\n  }\r\n};\r\n\r\nclass SidebarContent extends Component { \r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.timeout = 0;\r\n\r\n    this.state = {\r\n      props: props,\r\n      categories: props.categories,\r\n      difficulty: '',\r\n      favorites: '',\r\n      categorySelected: ''\r\n    }\r\n\r\n    this.difficultyOptions = []; \r\n    for (let i = 100; i <= 1000; i+=100) {\r\n      if (i !== 700 && i !== 900) {\r\n        this.difficultyOptions.push({\r\n          label: i.toString(),\r\n          value: i\r\n        })\r\n      }\r\n    }\r\n\r\n    this.onDifficultyChange = this.onDifficultyChange.bind(this);\r\n    this.onCategoryChange = this.onCategoryChange.bind(this);\r\n    this.onLoadAllPress = this.onLoadAllPress.bind(this);\r\n    this.onFavoritesChange = this.onFavoritesChange.bind(this);\r\n  }\r\n\r\n  onCategoryChange(categorySelected) {\r\n    this.setState({\r\n      categorySelected\r\n    });\r\n    if (categorySelected === null) {\r\n      this.state.props.categoryChangeListener(-1);\r\n    } else {\r\n      this.state.props.categoryChangeListener(categorySelected.value)\r\n    }\r\n  }\r\n\r\n  onDifficultyChange(difficulty) {\r\n    this.setState({\r\n      difficulty\r\n    });\r\n    if (difficulty === null) {\r\n      this.state.props.difficultySearchListener('');\r\n    } else {\r\n      this.state.props.difficultySearchListener(difficulty.value);\r\n    }\r\n  }\r\n\r\n  onFavoritesChange(favorites) {\r\n    this.setState({\r\n      favorites\r\n    });\r\n    if (favorites === null) {\r\n      this.state.props.favoritesListener('');\r\n    } else {\r\n      this.state.props.favoritesListener(favorites.value);\r\n    }\r\n  }\r\n\r\n  onLoadAllPress(event) {\r\n    this.state.props.fetchAllCards(2500);\r\n  }\r\n\r\n  onLoadAllQueryPress(event) {\r\n    this.state.props.queryChanged(true);\r\n  }\r\n\r\n  render() {\r\n    const style = this.state.props.style\r\n    ? { ...styles.sidebar, ...this.state.props.style }\r\n    : styles.sidebar;\r\n\r\n    const options = this.state.categories;\r\n    const filterOptions = createFilterOptions({ options });\r\n\r\n    const favoritesOptions = [{ label: \"View All\", value: \"View All\" }, \r\n                              { label: \"View Only Favorites\", value: \"View Only Favorites\"}, \r\n                              { label: \"View All But Favorites\", value: \"View All But Favorites\"}];\r\n\r\n    //const favoritesDDOptions = [\"View All\", \"View Only Favorites\", \"View All But Favorites\"];   \r\n\r\n    const difficultyOptions = this.difficultyOptions;\r\n    const diffFilterOptions = createFilterOptions({ difficultyOptions });\r\n    const favoritesFilterOptions = createFilterOptions({ favoritesOptions });\r\n    const links = [];    \r\n\r\n    links.push(\r\n      <div key=\"1\" className=\"cat\" style = {styles.sidebarLink}>\r\n        Category\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <Select\r\n        autosize = {false}\r\n        key=\"2\"\r\n        className = \"mt-4 col-md-8 col-offset-4\"\r\n        options={options} \r\n        name=\"categorySelected\" \r\n        onChange = {this.onCategoryChange}\r\n        searchable = {true}\r\n        clearable = {true}\r\n        value = {this.state.categorySelected}\r\n        filterOptions = {filterOptions}\r\n      />\r\n    );\r\n\r\n    links.push(\r\n      <div key=\"3\" className=\"diff\" style = {styles.sidebarLink}>\r\n        Difficulty\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <div key = \"4\" className = \"difficultyOps\">\r\n        <span>\r\n          <select className=\"difficultyDD\" onChange={this.state.props.difficultyChangeListener}>\r\n            <option value = {0}> = </option>\r\n            <option value = {1}> &gt; </option>\r\n            <option value = {2}> &lt; </option>\r\n          </select>\r\n        </span>\r\n        <span>\r\n          <Select\r\n            styles={{\r\n              width: `500px`\r\n            }}\r\n            autosize = {false}\r\n            key = \"6\"\r\n            options={difficultyOptions} \r\n            name=\"difficulty\" \r\n            className = \"difficulty\"\r\n            onChange = {this.onDifficultyChange}\r\n            searchable = {true}\r\n            clearable = {true}\r\n            value = {this.state.difficulty} \r\n            filterOptions = {diffFilterOptions}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <div key=\"7\" className=\"date\" style = {styles.sidebarLink}>\r\n        Date\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <div key = \"8\" className=\"dateBounds\">\r\n        <span>\r\n          <input \r\n            type=\"date\" \r\n            className = \"startDate\" \r\n            id=\"startDate\" \r\n            onChange={this.state.props.startDateListener} \r\n          />\r\n        </span> \r\n        to\r\n        <span>\r\n          <input \r\n            type=\"date\" \r\n            className = \"endDate\"\r\n            id=\"endDate\" \r\n            onChange={this.state.props.endDateListener} \r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <div key=\"9\" className=\"fav\" style = {styles.sidebarLink}>\r\n        Favorites\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <Select\r\n        autosize = {false}\r\n        key=\"10\"\r\n        options={favoritesOptions} \r\n        name=\"favorites\" \r\n        onChange = {this.onFavoritesChange}\r\n        searchable = {true}\r\n        clearable = {true}\r\n        value = {this.state.favorites}\r\n        filterOptions = {favoritesFilterOptions}\r\n      />\r\n    );\r\n\r\n    links.push(\r\n      <div key = \"11\" className= \"loadAll\" style = {styles.sidebarLink}>\r\n        Load All Cards\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <div key = \"12\" className = \"loadAllButton\">\r\n        <button className = \"loadButton\" onClick = {this.onLoadAllPress}> Load All</button>\r\n      </div>\r\n    );\r\n\r\n    links.push(\r\n      <div key = \"13\" className = \"loadAllQueryButton\">\r\n        <button className = \"loadQueryButton\" onClick = {this.onLoadAllQueryPress}> Load All in Query </button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <MaterialTitlePanel title=\"Filter Results\" style={style}>\r\n        <div style={styles.content}>\r\n          {links} \r\n        </div>\r\n      </MaterialTitlePanel>\r\n    );\r\n  }\r\n};\r\n\r\nSidebarContent.propTypes = {\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SidebarContent;"," import React from 'react';\r\n import './SearchBox.css';\r\n\r\n const SearchBox = ({ searchfield, searchChange, text }) => {\r\n \treturn(\r\n \t\t<input\r\n \t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n \t\t\ttype='search' \r\n \t\t\tplaceholder= {text} \r\n \t\t\tonChange = {searchChange}\r\n \t\t/>\r\n \t);\t\r\n }\r\n\r\n export default SearchBox;","import React from \"react\";\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport './ClueCard.css';\r\n\r\nvar factor = 3;\r\nvar marginFactor = 35;\r\nvar viewportWidth = document.documentElement.clientWidth-350;\r\nif (viewportWidth < 900) {\r\n\tviewportWidth += 350;\r\n} \r\nif (viewportWidth < 600) {\r\n\tfactor = 1;\r\n\tmarginFactor = 45;\r\n} else if (viewportWidth < 800) { \r\n\tfactor = 2;\r\n} else if (viewportWidth > 1600) {\r\n\tfactor = Math.trunc(viewportWidth / 400);\r\n} else if (viewportWidth >= 1350) { \r\n\tfactor = 4;\r\n}\r\nvar cardWidth = viewportWidth / factor - marginFactor;\r\n\r\nconst onCardClick = (id, listener) => (event) => {\r\n  listener(id);\r\n} \r\n\r\n\tconst ClueCard = (props) => {\r\n    if (props.favorited) {\r\n      return ( \r\n      <div className=\"ClueCard\">\r\n        <Flippy\r\n          flipOnHover = {true}\r\n          flipOnClick = {false}\r\n          flipDirection = \"horizontal\"\r\n          style={{ width: cardWidth.toString() + \"px\", height: \"400px\" }}\r\n          onClick = {onCardClick(props.id, props.listener)}\r\n        >\r\n          <FrontSide\r\n            style = {{\r\n              backgroundColor: '#0033cc',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n              fontFamily: 'sans-serif',\r\n            }}\r\n            onClick = {onCardClick(props.id, props.listener)}\r\n          >\r\n            <img\r\n              src=\"https://www.trzcacak.rs/myfile/full/439-4391718_jeopardy-transparent-jeopardy-logo.png\"\r\n              alt=\"jeopardy-logo\"\r\n              className=\"logo\"\r\n              style = {{ maxWidth: '60%', maxHeight: '70%'}}\r\n            />\r\n            <hr\r\n              style = {{\r\n                color: '#AEAEAF',\r\n                width: '80%'\r\n              }}\r\n            />\r\n            <div \r\n              className = \"categoryText\"\r\n              style = {{\r\n                marginTop: '10px',\r\n                fontSize: '19px'\r\n              }} \r\n              >\r\n                {props.category}\r\n            </div>\r\n            <div \r\n              className = \"difficultyText\"\r\n              style = {{\r\n                marginTop: '10px',\r\n                fontSize: '19px'\r\n              }} \r\n              >\r\n                {props.difficulty}\r\n            </div>\r\n            <div \r\n              className = \"clueText\" \r\n              style = {{\r\n                marginTop: '10px'\r\n              }} \r\n              >\r\n                {props.clue}\r\n            </div>\r\n            <div\r\n              className = \"favoritedText\"\r\n              style = {{\r\n                marginTop: '10px'\r\n              }}\r\n            >\r\n              Favorited\r\n            </div>\r\n          </FrontSide>\r\n          <BackSide\r\n            style = {{\r\n              backgroundColor: '#0033cc',\r\n              color: 'white'\r\n            }}\r\n            onClick = {onCardClick(props.id, props.listener)}\r\n          >\r\n            <div \r\n              className = \"answerText\" \r\n              style = {{\r\n                display: 'flex',\r\n                textAlign: 'center',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginTop: '150px'\r\n              }}\r\n            >\r\n                {props.answer}\r\n            </div>\r\n          </BackSide>\r\n        </Flippy>\r\n      </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"ClueCard\">\r\n        <Flippy\r\n          flipOnHover = {true}\r\n          flipOnClick = {false}\r\n          flipDirection = \"horizontal\"\r\n          style={{ width: cardWidth.toString() + \"px\", height: \"400px\" }}\r\n          onClick = {onCardClick(props.id, props.listener)}\r\n        >\r\n          <FrontSide\r\n            style = {{\r\n              backgroundColor: '#0033cc',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n              fontFamily: 'sans-serif',\r\n            }}\r\n            onClick = {onCardClick(props.id, props.listener)}\r\n          >\r\n            <img\r\n              src=\"https://www.trzcacak.rs/myfile/full/439-4391718_jeopardy-transparent-jeopardy-logo.png\"\r\n              alt=\"jeopardy-logo\"\r\n              className=\"logo\"\r\n              style = {{ maxWidth: '60%', maxHeight: '70%'}}\r\n            />\r\n            <hr\r\n              style = {{\r\n                color: '#AEAEAF',\r\n                width: '80%'\r\n              }}\r\n            />\r\n            <div \r\n              className = \"categoryText\"\r\n              style = {{\r\n                marginTop: '10px',\r\n                fontSize: '19px'\r\n              }} \r\n              >\r\n                {props.category}\r\n            </div>\r\n            <div \r\n              className = \"difficultyText\"\r\n              style = {{\r\n                marginTop: '10px',\r\n                fontSize: '19px'\r\n              }} \r\n              >\r\n                {props.difficulty}\r\n            </div>\r\n            <div \r\n              className = \"clueText\" \r\n              style = {{\r\n                marginTop: '10px'\r\n              }} \r\n              >\r\n                {props.clue}\r\n            </div>\r\n          </FrontSide>\r\n          <BackSide\r\n            style = {{\r\n              backgroundColor: '#0033cc',\r\n              color: 'white'\r\n            }}\r\n            onClick = {onCardClick(props.id, props.listener)}\r\n          >\r\n            <div \r\n              className = \"answerText\" \r\n              style = {{\r\n                display: 'flex',\r\n                textAlign: 'center',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginTop: '150px'\r\n              }}\r\n            >\r\n                {props.answer}\r\n            </div>\r\n          </BackSide>\r\n        </Flippy>\r\n      </div>\r\n    );\r\n\t}\r\n\r\nexport default ClueCard;","import React from 'react';\r\nimport Card from './ClueCard';\r\n\r\nconst CardList = ({ cards, favorited }) => {\r\n    return (\r\n      <div>\r\n        {\r\n         cards.map((card,i) => {\r\n          let isFavorited = favorited.has(cards[i].id);\r\n          return (\r\n            <Card \r\n              listener = {cards[i].listener}\r\n              key = {cards[i].key}\r\n              id = {cards[i].id}\r\n              clue = {cards[i].clue}\r\n              category = {cards[i].category}\r\n              difficulty = {cards[i].difficulty}\r\n              answer = {cards[i].answer}\r\n              airDate = {cards[i].airDate}\r\n              favorited = {isFavorited}\r\n            />\r\n          );\r\n        })\r\n        }\r\n      </div>\r\n    );\r\n }\r\n\r\n export default CardList;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Sidebar from 'react-sidebar';\nimport Pagination from 'react-paginate';\nimport SidebarContent from './sidebar_content';\nimport SearchBox from './SearchBox';\nimport MaterialTitlePanel from './material_title_panel';\nimport CardList from './CardList';\nimport './App.css';\n\n\nconst styles = {\n  contentHeaderMenuLink: {\n    textDecoration: \"none\",\n    color: \"white\",\n    padding: 8\n  },\n  content: {\n    padding: \"16px\"\n  }\n};\n\n\nconst mql = window.matchMedia(`(min-width: 1200px)`);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCards: [],\n      filteredCards: [],\n      allCategories: [],\n      docked: mql.matches,\n      searchfield: '',\n      categoryindex: -1,\n      difficulty: 0,\n      difficultyfield: '',\n      dateStart: '',\n      dateEnd: '', \n      favorites: new Set(),\n      favoritesMode: 0,\n      open: false,\n      activePage: 1,\n      itemsPerPage: 10,\n      useFiltered: 0\n    };\n\n    this.diffFilteredCards = [];\n    this.timeout = 0;\n\n    this.fetchCategories = this.fetchCategories.bind(this);\n    this.fetchAllCards = this.fetchAllCards.bind(this);\n    this.fetchCards = this.fetchCards.bind(this);\n    this.fetchInitialCards = this.fetchInitialCards.bind(this);\n    this.fetchAllQueriedCards = this.fetchAllQueriedCards.bind(this);\n    this.queryChanged = this.queryChanged.bind(this);\n    this.mediaQueryChanged = this.mediaQueryChanged.bind(this);\n    this.toggleOpen = this.toggleOpen.bind(this);\n    this.onSetOpen = this.onSetOpen.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n    this.onDifficultyChange = this.onDifficultyChange.bind(this);\n    this.onDifficultySearchChange = this.onDifficultySearchChange.bind(this);\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.onEndDateChange = this.onEndDateChange.bind(this);\n    this.onFavoritesDDChange = this.onFavoritesDDChange.bind(this);\n    this.addToFavorites = this.addToFavorites.bind(this);\n  }\n\n  fetchCategories(currOffset) {\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/categories?offset=' + currOffset + \n              '&count=100')\n        .then((response) =>  {\n          let category = response.data; \n          if (currOffset <= 18400) {\n            for (let i = 0; i < category.length; i++) { \n              this.state.allCategories.push({\n                label: category[i].title, \n                value: category[i].id.toString()\n              });\n            }\n            this.fetchCategories(currOffset+100);\n          } \n    });\n  }\n\n  fetchAllCards(offset) {\n    let cards = [];\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?offset=' + offset)\n      .then((response) => {\n        let data = response.data;\n        if (data.length > 0) {\n          for (let i = 0; i < data.length; i++) {\n            if (data[i].category !== undefined) {\n              let removedTags = data[i].answer.replace('<i>','').replace('</i>','');\n              cards.push(\n                {\n                  listener: this.addToFavorites,\n                  key: data[i].id,\n                  id: data[i].id,\n                  clue: data[i].question,\n                  category: data[i].category.title,\n                  difficulty: data[i].value,\n                  answer: removedTags,\n                  airDate: data[i].airdate\n                }\n              );\n            }\n          }\n          this.fetchAllCards(offset+100)\n          let currCards = this.state.allCards;\n          this.setState({\n              allCards: currCards.concat(cards)\n          });\n        }\n    });\n  }\n\n  fetchInitialCards(offset) {\n    let cards = [];\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?offset=' + offset)\n      .then((response) => {\n        let data = response.data;\n        if (offset <= 2400) {\n          for (let i = 0; i < data.length; i++) {\n            if (data[i].category !== undefined) {\n              let removedTags = data[i].answer.replace('<i>','').replace('</i>','');\n              cards.push(\n                {\n                  listener: this.addToFavorites,\n                  key: data[i].id,\n                  id: data[i].id,\n                  clue: data[i].question,\n                  category: data[i].category.title,\n                  difficulty: data[i].value,\n                  answer: removedTags,\n                  airDate: data[i].airdate\n                }\n              );\n            }\n          }\n          this.fetchInitialCards(offset+100)\n          let currCards = this.state.allCards;\n          this.setState({\n              allCards: currCards.concat(cards)\n          });\n        }\n    });\n  }\n\n  async fetchCards(query) {\n    let cards = [];\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues', query)\n      .then((response) => {\n        let data = response.data;\n        for (let i = 0; i < data.length; i++) {\n          let removedTags = data[i].answer.replace('<i>','').replace('</i>','');\n          cards.push(\n            {\n              listener: this.addToFavorites,\n              key: data[i].id,\n              id: data[i].id,\n              clue: data[i].question,\n              category: data[i].category.title,\n              difficulty: data[i].value,\n              answer: removedTags,\n              airDate: data[i].airdate\n            } \n          );\n        }\n        this.setState({\n          filteredCards: [...cards],\n        });\n      });\n  }\n\n  fetchAllQueriedCards(query) {\n    let cards = [];\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues', query)\n      .then((response) => {\n        let data = response.data;\n        if (data.length > 0) {\n          for (let i = 0; i < data.length; i++) {\n            let removedTags = data[i].answer.replace('<i>','').replace('</i>','');\n            cards.push(\n              {\n                listener: this.addToFavorites,\n                key: data[i].id,\n                id: data[i].id,\n                clue: data[i].question,\n                category: data[i].category.title,\n                difficulty: data[i].value,\n                answer: removedTags,\n                airDate: data[i].airdate\n              } \n            );  \n          }\n          query.params.offset = query.params.offset + 100;\n          this.fetchAllQueriedCards(query);\n          let currCards = this.state.filteredCards;\n          this.setState({\n            filteredCards: currCards.concat(cards),\n          });\n      }\n    });\n  }\n\n  queryChanged(loadAll) {\n    setTimeout(\n      function() {\n          this.diffFilteredCards = [];\n          let query = {\n            params: {}\n          };\n          if (this.state.categoryindex !== -1) {\n            query.params.category = this.state.categoryindex.toString();\n          }\n          let dateStart = this.state.dateStart;\n          if (dateStart !== '') {\n            var s = new Date(parseInt(dateStart.substring(0, 4)),\n                             parseInt(dateStart.substring(5, 7)-1),\n                             parseInt(dateStart.substring(8, 10)-1),\n                             20,\n                             0,\n                             0);\n            query.params.min_date = s;\n          }\n          let dateEnd = this.state.dateEnd;\n          if (dateEnd !== '') {\n            var e = new Date(parseInt(dateEnd.substring(0, 4)),\n                             parseInt(dateEnd.substring(5, 7)-1),\n                             parseInt(dateEnd.substring(8, 10)),\n                             19,\n                             59,\n                             0);\n            query.params.max_date = e;\n          }\n          if (this.state.difficulty === 0 && this.state.difficultyfield !== '') {\n            query.params.value = this.state.difficultyfield;\n          }\n\n          if (Object.keys(query.params).length !== 0) {\n            this.setState({\n              useFiltered: 1\n            });\n            if (loadAll) {\n              query.params.offset = 100;\n              this.fetchAllQueriedCards(query);\n            } else {\n              this.fetchCards(query);\n            }\n          } else {\n            this.setState({\n              useFiltered: 0\n            });\n          }\n      }\n      .bind(this),\n      50\n    );\n\n  }\n\n  componentDidMount() {\n    document.title = ''\n    mql.addListener(this.mediaQueryChanged);\n    this.fetchCategories(0);\n    this.fetchInitialCards(0);\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged);\n  }\n\n  onSetOpen(open) {\n    this.setState({ open });\n  }\n\n  mediaQueryChanged() {\n    this.setState({\n      docked: mql.matches,\n      open: false\n    });\n  }\n\n  toggleOpen(ev) {\n    this.setState({open: !this.state.open});\n\n    if (ev) {\n      ev.preventDefault();\n    }\n  }\n\n  onSearchChange = (event) => {\n    event.persist();\n    this.event = event;\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.timeout = setTimeout(() => {\n      this.setState({\n        searchfield: this.event.target.value\n      });\n    }, 1000);\n  }\n\n  onCategoryChange = (event) => {\n    this.setState({\n      categoryindex: event\n    });\n    this.queryChanged(false);\n  }\n\n  onDifficultyChange = (event) => {\n    if (event === -1) {\n      this.setState({\n        difficulty: -1\n      })\n      this.queryChanged(false);\n    } else {\n      event.persist();\n      this.setState({\n        difficulty: parseInt(event.target.value)\n      });\n      this.queryChanged(false);\n    }\n  }\n\n  onDifficultySearchChange = (event) => {\n    this.setState({\n      difficultyfield: event\n    });\n    this.queryChanged(false);\n  }\n\n  onStartDateChange = (event) => {\n    event.persist();\n    this.setState({\n      dateStart: event.target.value\n    });\n    this.queryChanged(false);\n  }\n\n  onEndDateChange = (event) => {\n    event.persist();\n    this.setState({\n      dateEnd: event.target.value\n    });\n    this.queryChanged(false);\n  }\n\n  onFavoritesDDChange = (event) => {\n    let mode = 0;\n    if (event === \"View Only Favorites\") {\n      mode = 1;\n    } else if (event === \"View All But Favorites\") {\n      mode = 2;\n    }\n    this.setState({\n      favoritesMode: mode\n    });\n  }\n\n  changePage(data) {\n    let selected = data.selected + 1;\n\n    this.setState({\n      activePage: selected\n    });\n  }\n\n  addToFavorites = (id) => {\n    let favs = this.state.favorites;\n    if (favs.has(id)) {\n      favs.delete(id);\n    } else {\n      favs.add(id);\n    }\n    this.setState({\n      favorites: favs\n    });\n  }\n\n  render() { \n    const sidebarContentProps = {\n      categoryChangeListener: this.onCategoryChange,\n      difficultyChangeListener: this.onDifficultyChange,\n      difficultySearchListener: this.onDifficultySearchChange,\n      startDateListener: this.onStartDateChange,\n      endDateListener: this.onEndDateChange,  \n      favoritesListener: this.onFavoritesDDChange,\n      categories: this.state.allCategories,\n      fetchAllCards: this.fetchAllCards,\n      queryChanged: this.queryChanged\n    };\n    const sidebar = <SidebarContent {...sidebarContentProps}/>;\n\n    const contentHeader = (\n      <span>\n        {!this.state.docked && (\n          <a\n            onClick={this.toggleOpen}\n            href=\"/\"\n            style={styles.contentHeaderMenuLink}\n          >\n            =\n          </a>\n        )}\n        <span className=\"title\"> \n          Jeopardy Clue Finder \n        </span>\n        <span className=\"inner\"> \n          <SearchBox className=\"search\" searchChange = {this.onSearchChange} text = \"Search clue name\"/> \n        </span>\n      </span>\n    );\n\n    const sidebarProps = {\n      sidebar,\n      docked: this.state.docked,\n      open: this.state.open,\n      onSetOpen: this.onSetOpen,\n    };\n\n    var indexOfLast = this.state.activePage * this.state.itemsPerPage;\n    var indexOfFirst = indexOfLast - this.state.itemsPerPage;\n    var pages;    \n\n    var listOfCards = (this.state.useFiltered === 0) ? this.state.allCards : this.state.filteredCards;\n    var cardRef = listOfCards;\n\n    if (this.state.searchfield !== '') {\n      cardRef = listOfCards.filter(item => item.clue.toLowerCase().includes(this.state.searchfield.toLowerCase())); \n    }\n\n    if (this.state.difficultyfield !== '' && this.state.difficulty >= 1) {\n      if (this.diffFilteredCards.length === 0) {\n        let difficulty = parseInt(this.state.difficultyfield);\n        if (this.state.difficulty === 1) {\n          this.diffFilteredCards = cardRef.filter(item => item.difficulty > difficulty);\n        } else if (this.state.difficulty === 2) {\n          this.diffFilteredCards = cardRef.filter(item => item.difficulty < difficulty);\n        }\n      }\n      cardRef = this.diffFilteredCards;\n    } else {\n      this.diffFilteredCards = [];\n    }\n    if (this.state.favoritesMode === 1) {\n      cardRef = cardRef.filter(item => this.state.favorites.has(item.id));\n    } else if (this.state.favoritesMode === 2) {\n      cardRef = cardRef.filter(item => !this.state.favorites.has(item.id));\n    }\n    let cardsToRender = cardRef.slice(indexOfFirst, indexOfLast);\n    pages = Math.max(Math.trunc(cardRef.length / this.state.itemsPerPage), 1);\n\n    return (\n      <Sidebar {...sidebarProps}>\n        <MaterialTitlePanel title={contentHeader} className = \"title-panel\">\n          <div style={styles.content} className = \"panel-heading\">    \n            <CardList cards={cardsToRender} favorited = {this.state.favorites} />\n          </div>\n          <div className = \"panel-body\">\n            <div id = \"react-paginate\">\n              <Pagination\n                previousLabel = {'<'}\n                nextLabel = {'>'}\n                breakLabel = {'...'}\n                breakClassName={'break-me'}\n                pageCount={pages}\n                marginPageDisplayed={2}\n                pageRangeDisplayed={10}\n                onPageChange = {this.changePage.bind(this)}\n                containerClassName={'pagination'}\n                subContainerClassName = {'pages pagination'}\n                activeClassName={'active'}\n              />\n            </div>\n          </div>\n        </MaterialTitlePanel>\n      </Sidebar>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}